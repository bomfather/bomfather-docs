---
// components/ui/PageSection.astro
interface Props {
  id?: string;
  variant?: 'default' | 'dark' | 'light' | 'accent';
  size?: 'sm' | 'md' | 'lg' | 'xl';
  containerSize?: 'sm' | 'md' | 'lg' | 'xl' | 'full';
  headerLevel?: 1 | 2 | 3 | 4 | 5 | 6;
  title?: string;
  subtitle?: string;
  centerHeader?: boolean;
  className?: string;
}

const {
  id,
  variant = 'default',
  size = 'md',
  containerSize = 'lg',
  headerLevel,
  title,
  subtitle,
  centerHeader = false,
  className = '',
  ...rest
} = Astro.props;

const HeadingTag = headerLevel ? `h${headerLevel}` as keyof JSX.IntrinsicElements : null;
---

<section 
  id={id}
  class={`page-section page-section--${variant} page-section--${size} ${className}`}
  aria-labelledby={title ? `${id}-heading` : undefined}
  {...rest}
>
  <div class={`container container--${containerSize}`}>
    {(title || subtitle) && (
      <header class={`section-header ${centerHeader ? 'section-header--center' : ''}`}>
        {title && HeadingTag && (
          <HeadingTag id={id ? `${id}-heading` : undefined} class="section-title">
            {title}
          </HeadingTag>
        )}
        {subtitle && (
          <p class="section-subtitle">
            {subtitle}
          </p>
        )}
      </header>
    )}
    
    <div class="section-content">
      <slot />
    </div>
  </div>
</section>

<style>
.page-section {
  position: relative;
  width: 100%;
}

/* Section variants */
.page-section--default {
  background: #ffffff;
  color: #1f2937;
}

.page-section--dark {
  background: #0a0d15;
  color: #ffffff;
}

.page-section--light {
  background: #f8fafc;
  color: #1f2937;
}

.page-section--accent {
  background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%);
  color: #ffffff;
}

/* Section sizes */
.page-section--sm {
  padding: 3rem 0;
}

.page-section--md {
  padding: 4rem 0;
}

.page-section--lg {
  padding: 6rem 0;
}

.page-section--xl {
  padding: 8rem 0;
}

/* Container sizes */
.container {
  margin: 0 auto;
  padding: 0 1.5rem;
}

.container--sm {
  max-width: 640px;
}

.container--md {
  max-width: 768px;
}

.container--lg {
  max-width: 1200px;
}

.container--xl {
  max-width: 1400px;
}

.container--full {
  max-width: none;
  padding: 0;
}

/* Section header */
.section-header {
  margin-bottom: 3rem;
}

.section-header--center {
  text-align: center;
  max-width: 800px;
  margin-left: auto;
  margin-right: auto;
}

.section-title {
  font-size: clamp(1.875rem, 4vw, 3rem);
  font-weight: 700;
  line-height: 1.2;
  margin-bottom: 1rem;
}

.section-subtitle {
  font-size: clamp(1rem, 2vw, 1.25rem);
  line-height: 1.6;
  opacity: 0.8;
  max-width: 600px;
}

.section-header--center .section-subtitle {
  margin: 0 auto;
}

/* Dark variant adjustments */
.page-section--dark .section-title {
  background: linear-gradient(135deg, #ffffff 0%, #a1a1aa 100%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

.page-section--accent .section-title {
  color: #ffffff;
}

/* Content area */
.section-content {
  position: relative;
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .container {
    padding: 0 1rem;
  }
  
  .section-header {
    margin-bottom: 2rem;
  }
  
  .page-section--sm {
    padding: 2rem 0;
  }
  
  .page-section--md {
    padding: 3rem 0;
  }
  
  .page-section--lg {
    padding: 4rem 0;
  }
  
  .page-section--xl {
    padding: 5rem 0;
  }
}

/* High contrast mode support */
@media (prefers-contrast: high) {
  .page-section--dark .section-title {
    -webkit-text-fill-color: white;
    background: none;
  }
}

/* Print styles */
@media print {
  .page-section {
    padding: 1rem 0 !important;
    background: white !important;
    color: black !important;
  }
}
</style> 
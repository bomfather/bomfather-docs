---
// components/ui/Card.astro
interface Props {
  variant?: 'default' | 'elevated' | 'bordered' | 'glass';
  padding?: 'sm' | 'md' | 'lg';
  href?: string;
  icon?: string;
  title?: string;
  subtitle?: string;
  className?: string;
  clickable?: boolean;
}

const {
  variant = 'default',
  padding = 'md',
  href,
  icon,
  title,
  subtitle,
  className = '',
  clickable = false,
  ...rest
} = Astro.props;

const Component = href ? 'a' : 'div';
const isInteractive = href || clickable;
---

<Component
  href={href}
  class={`card card--${variant} card--${padding} ${isInteractive ? 'card--interactive' : ''} ${className}`}
  {...rest}
>
  {icon && (
    <div class="card-icon" data-icon={icon}>
      <slot name="icon">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
          <circle cx="12" cy="12" r="10" stroke="currentColor" stroke-width="2"/>
          <path d="9 12l2 2 4-4" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </slot>
    </div>
  )}
  
  {(title || subtitle) && (
    <header class="card-header">
      {title && (
        <h3 class="card-title">
          {title}
        </h3>
      )}
      {subtitle && (
        <p class="card-subtitle">
          {subtitle}
        </p>
      )}
    </header>
  )}
  
  <div class="card-content">
    <slot />
  </div>
  
  <slot name="footer" />
</Component>

<style>
.card {
  position: relative;
  display: flex;
  flex-direction: column;
  border-radius: 0.75rem;
  transition: all 0.2s ease;
  text-decoration: none;
  color: inherit;
}

/* Card variants */
.card--default {
  background: var(--color-surface);
  border: 1px solid var(--color-border-light);
}

.card--elevated {
  background: var(--color-surface);
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
}

.card--bordered {
  background: var(--color-surface);
  border: 2px solid var(--color-border-medium);
}

.card--glass {
  background: var(--color-surface);
  border: 1px solid var(--color-border-light);
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
}

/* Card padding sizes */
.card--sm {
  padding: 1rem;
}

.card--md {
  padding: 1.5rem;
}

.card--lg {
  padding: 2rem;
}

/* Interactive states */
.card--interactive {
  cursor: pointer;
}

.card--interactive:hover {
  transform: translateY(-2px);
}

.card--default.card--interactive:hover {
  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
}

.card--elevated.card--interactive:hover {
  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
}

.card--bordered.card--interactive:hover {
  border-color: #3b82f6;
}

.card--glass.card--interactive:hover {
  background: rgba(255, 255, 255, 0.15);
  border-color: rgba(255, 255, 255, 0.3);
}

/* Card icon */
.card-icon {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: 3rem;
  height: 3rem;
  background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%);
  color: white;
  border-radius: 0.75rem;
  margin-bottom: 1rem;
  flex-shrink: 0;
}

.card-icon svg {
  width: 1.5rem;
  height: 1.5rem;
}

/* Card header */
.card-header {
  margin-bottom: 1rem;
}

.card-title {
  font-size: 1.25rem;
  font-weight: 600;
  line-height: 1.3;
  margin-bottom: 0.5rem;
  color: var(--color-text-primary);
}

.card-subtitle {
  font-size: 0.875rem;
  color: var(--color-text-secondary);
  line-height: 1.5;
}

/* Card content */
.card-content {
  flex: 1;
  color: var(--color-text-secondary);
  line-height: 1.6;
  margin-bottom: 2rem;
}

.card-content p:last-child {
  margin-bottom: 0;
}

/* Light theme support */
.page-section--dark .card--default,
.page-section--dark .card--elevated,
.page-section--dark .card--bordered {
  background: var(--color-surface);
  border-color: var(--color-border-light);
  color: var(--color-text-secondary);
}

.page-section--dark .card-title {
  color: var(--color-text-primary) !important;
}

.page-section--dark .card-subtitle {
  color: var(--color-text-secondary);
}

.page-section--dark .card-content {
  color: var(--color-text-secondary);
}

.page-section--dark .card--bordered.card--interactive:hover {
  border-color: var(--color-primary);
}

/* Additional light theme fixes with higher specificity */
.page-section--dark .card .card-title,
.page-section--dark .card h1,
.page-section--dark .card h2,
.page-section--dark .card h3,
.page-section--dark .card h4,
.page-section--dark .card h5,
.page-section--dark .card h6 {
  color: var(--color-text-primary) !important;
}

/* Glass card specific fixes */
.card--glass .card-title,
.card--glass h1,
.card--glass h2,
.card--glass h3,
.card--glass h4,
.card--glass h5,
.card--glass h6 {
  color: var(--color-text-primary) !important;
}

/* Fallback for any missed title elements */
[class*="card"] .card-title,
[class*="card"] h1,
[class*="card"] h2,
[class*="card"] h3,
[class*="card"] h4,
[class*="card"] h5,
[class*="card"] h6 {
  color: var(--color-text-primary) !important;
}

/* Focus styles for accessibility */
.card--interactive:focus {
  outline: 2px solid #3b82f6;
  outline-offset: 2px;
}

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
  .card {
    transition: none;
  }
  
  .card--interactive:hover {
    transform: none;
  }
}

/* High contrast mode support */
@media (prefers-contrast: high) {
  .card {
    border-width: 2px;
  }
  
  .card-icon {
    background: #000000;
    color: #ffffff;
  }
}

/* Print styles */
@media print {
  .card {
    background: white !important;
    border: 1px solid #000 !important;
    box-shadow: none !important;
    break-inside: avoid;
  }
  
  .card-icon {
    background: #000 !important;
    color: #fff !important;
  }
}
</style> 
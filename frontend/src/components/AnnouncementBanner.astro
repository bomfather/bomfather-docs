---
// AnnouncementBanner.astro - A dismissible announcement banner with local storage persistence
---

<div id="announcement-banner" class="announcement-banner bg-primary text-white py-3 px-4 fixed top-0 left-0 w-full z-[60] hidden" aria-hidden="true">
  <div class="container mx-auto flex items-center justify-between">
    <div class="flex items-center">
      <span class="text-lg mr-2">ðŸŽ‰</span>
      <span class="text-lg mr-2">ðŸ‘‰</span>
      <p class="font-medium text-sm md:text-base flex items-center">
        <span class="font-bold">Exciting news!</span>&nbsp;Bomfather will be open-sourced soon!
      </p>
    </div>
    <button id="close-banner" class="ml-4 text-white hover:text-gray-200 focus:outline-none" aria-label="Close banner">
      <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
        <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd" />
      </svg>
    </button>
  </div>
</div>

<style>
  .announcement-banner {
    transform: translateY(-100%);
    transition: transform 0.3s ease-in-out;
  }
  
  .announcement-banner.show {
    transform: translateY(0);
  }
</style>

<script>
  // Constants for localStorage
  const BANNER_KEY = 'bomfather_announcement';
  const BANNER_VERSION = 'disabled_2025';
  
  document.addEventListener('DOMContentLoaded', () => {
    const banner = document.getElementById('announcement-banner');
    const closeButton = document.getElementById('close-banner');
    const header = document.querySelector('.header-nav');
    
    if (!banner || !closeButton) return;
    
    // Function to update banner height CSS variable
    function updateBannerHeightVar() {
      if (banner.classList.contains('show')) {
        document.documentElement.style.setProperty('--banner-height', `${banner.offsetHeight}px`);
      } else {
        document.documentElement.style.setProperty('--banner-height', '0px');
      }
    }
    
    // Check if this version of the banner has been dismissed
    const storedBanner = localStorage.getItem(BANNER_KEY);
    
    // Do not auto-show the banner; keep it hidden by default
    banner.classList.add('hidden');
    
    // Handle close button click
    closeButton.addEventListener('click', () => {
      // Save dismissal to localStorage
      localStorage.setItem(BANNER_KEY, BANNER_VERSION);
      
      // Animate banner out
      banner.classList.remove('show');
      updateBannerHeightVar();
      
      // Reset header position when banner is hidden
      if (header) {
        header.style.top = '0';
      }
      
      // Hide banner after animation completes
      setTimeout(() => {
        banner.classList.add('hidden');
      }, 300);
    });
    
    // Handle window resize for responsive adjustments
    window.addEventListener('resize', updateBannerHeightVar);
  });
</script> 
